{
  internal: {
    pdfEscape: [Function],
    getStyle: [Function],
    getFont: [Function],
    getFontSize: [Function],
    getCharSpace: [Function],
    getTextColor: [Function],
    getLineHeight: [Function],
    getLineHeightFactor: [Function],
    write: [Function],
    getHorizontalCoordinate: [Function],
    getVerticalCoordinate: [Function],
    getCoordinateString: [Function],
    getVerticalCoordinateString: [Function],
    collections: {},
    newObject: [Function],
    newAdditionalObject: [Function],
    newObjectDeferred: [Function],
    newObjectDeferredBegin: [Function: Yt],
    getFilters: [Function],
    putStream: [Function],
    events: x {
      subscribe: [Function],
      unsubscribe: [Function],
      publish: [Function],
      getTopics: [Function]
    },
    scaleFactor: 2.834645669291339,
    pageSize: {
      getWidth: [Function: getWidth],
      setWidth: [Function: setWidth],
      getHeight: [Function: getHeight],
      setHeight: [Function: setHeight],
      width: [Getter/Setter],
      height: [Getter/Setter]
    },
    encryptionOptions: null,
    encryption: null,
    getEncryptor: [Function: Ve],
    output: [Function] { bar: [Function] },
    getNumberOfPages: [Function],
    pages: [ <1 empty item>, [Array] ],
    out: [Function],
    f2: [Function],
    f3: [Function],
    getPageInfo: [Function],
    getPageInfoByObjId: [Function],
    getCurrentPageInfo: [Function],
    getPDFVersion: [Function],
    Point: [Function: _r],
    Rectangle: [Function: Pr],
    Matrix: [Function: Ut],
    hasHotfix: [Function: ze]
  },
  __private__: {
    PubSub: [Function: x],
    getPdfVersion: [Function],
    setPdfVersion: [Function],
    getPageFormats: [Function],
    getPageFormat: [Function],
    roundToPrecision: [Function],
    hpf: [Function],
    f2: [Function],
    f3: [Function],
    scale: [Function],
    setPrecision: [Function],
    getFileId: [Function],
    setFileId: [Function],
    convertDateToPDFDate: [Function],
    convertPDFDateToDate: [Function],
    setCreationDate: [Function],
    getCreationDate: [Function],
    padd2: [Function],
    padd2Hex: [Function],
    setCustomOutputDestination: [Function],
    resetCustomOutputDestination: [Function],
    out: [Function],
    write: [Function],
    getArrayBuffer: [Function],
    getStandardFonts: [Function],
    setFontSize: [Function],
    getFontSize: [Function],
    setR2L: [Function],
    getR2L: [Function],
    setZoomMode: [Function],
    getZoomMode: [Function],
    setPageMode: [Function],
    getPageMode: [Function],
    setLayoutMode: [Function],
    getLayoutMode: [Function],
    setDisplayMode: [Function],
    getDocumentProperty: [Function],
    getDocumentProperties: [Function],
    setDocumentProperties: [Function],
    setDocumentProperty: [Function],
    newObject: [Function],
    newObjectDeferred: [Function],
    newAdditionalObject: [Function],
    decodeColorString: [Function],
    encodeColorString: [Function],
    getFilters: [Function],
    putStream: [Function],
    putPage: [Function],
    putPages: [Function],
    pdfEscape: [Function],
    beginPage: [Function],
    getNumberOfPages: [Function],
    putInfo: [Function],
    putCatalog: [Function],
    putTrailer: [Function],
    putHeader: [Function],
    putXRef: [Function],
    buildDocument: [Function],
    getBlob: [Function],
    output: [Function] { bar: [Function] },
    getPageInfo: [Function],
    getPageInfoByObjId: [Function],
    getCurrentPageInfo: [Function],
    text: [Function],
    clip: [Function],
    discardPath: [Function],
    isValidStyle: [Function],
    setDefaultPathOperation: [Function],
    getStyle: [Function],
    line: [Function],
    lines: [Function],
    rect: [Function],
    triangle: [Function],
    roundedRect: [Function],
    ellipse: [Function],
    circle: [Function],
    getFont: [Function],
    getFontList: [Function],
    setLineWidth: [Function],
    setLineDash: [Function],
    getLineHeight: [Function],
    setLineHeightFactor: [Function],
    getLineHeightFactor: [Function],
    getHorizontalCoordinate: [Function],
    getVerticalCoordinate: [Function],
    getHorizontalCoordinateString: [Function],
    getVerticalCoordinateString: [Function],
    getStrokeColor: [Function],
    setStrokeColor: [Function],
    getFillColor: [Function],
    setFillColor: [Function],
    getTextColor: [Function],
    setTextColor: [Function],
    getCharSpace: [Function],
    setCharSpace: [Function],
    setLineCap: [Function],
    setLineJoin: [Function],
    setMiterLimit: [Function],
    setLineMiterLimit: [Function]
  },
  advancedAPI: [Function],
  compatAPI: [Function],
  isAdvancedAPI: [Function],
  roundToPrecision: [Function],
  hpf: [Function],
  f2: [Function],
  scale: [Function],
  setPrecision: [Function],
  setFileId: [Function],
  getFileId: [Function],
  setCreationDate: [Function],
  getCreationDate: [Function],
  setFontSize: [Function],
  getFontSize: [Function],
  setR2L: [Function],
  getR2L: [Function],
  setDisplayMode: [Function],
  setDocumentProperties: [Function],
  setProperties: [Function],
  Matrix: [Function: Ut],
  matrixMult: [Function],
  identityMatrix: Ut { _matrix: [ 1, 0, 0, 1, 0, 0 ] },
  unitMatrix: Ut { _matrix: [ 1, 0, 0, 1, 0, 0 ] },
  ShadingPattern: [Function: P],
  TilingPattern: [Function: k],
  addShadingPattern: [Function],
  beginTilingPattern: [Function],
  endTilingPattern: [Function],
  pdfEscape: [Function],
  getNumberOfPages: [Function],
  output: [Function] { bar: [Function] { foo: [Circular] } },
  getPageInfo: [Function],
  getCurrentPageInfo: [Function],
  addPage: [Function],
  setPage: [Function],
  insertPage: [Function],
  movePage: [Function],
  deletePage: [Function],
  text: [Function],
  clip: [Function],
  clipEvenOdd: [Function],
  discardPath: [Function],
  setDefaultPathOperation: [Function],
  getStyle: [Function],
  close: [Function],
  stroke: [Function],
  fill: [Function],
  fillEvenOdd: [Function],
  fillStroke: [Function],
  fillStrokeEvenOdd: [Function],
  moveTo: [Function],
  lineTo: [Function],
  curveTo: [Function],
  line: [Function],
  lines: [Function],
  path: [Function],
  rect: [Function],
  triangle: [Function],
  roundedRect: [Function],
  ellipse: [Function],
  circle: [Function],
  setFont: [Function],
  getFont: [Function],
  getFontList: [Function],
  addFont: [Function],
  setLineWidth: [Function],
  getLineHeight: [Function],
  setLineHeightFactor: [Function],
  getLineHeightFactor: [Function],
  getHorizontalCoordinateString: [Function],
  getVerticalCoordinateString: [Function],
  getDrawColor: [Function],
  setDrawColor: [Function],
  getFillColor: [Function],
  setFillColor: [Function],
  getTextColor: [Function],
  setTextColor: [Function],
  getCharSpace: [Function],
  setCharSpace: [Function],
  CapJoinStyles: {
    '0': 0,
    '1': 1,
    '2': 2,
    butt: 0,
    but: 0,
    miter: 0,
    round: 1,
    rounded: 1,
    circle: 1,
    projecting: 2,
    project: 2,
    square: 2,
    bevel: 2
  },
  setLineCap: [Function],
  setLineJoin: [Function],
  setMiterLimit: [Function],
  setLineMiterLimit: [Function],
  GState: [Function: S],
  setGState: [Function],
  addGState: [Function],
  saveGraphicsState: [Function],
  restoreGraphicsState: [Function],
  setCurrentTransformationMatrix: [Function],
  comment: [Function],
  beginFormObject: [Function],
  endFormObject: [Function],
  doFormObject: [Function],
  getFormObject: [Function],
  save: [Function],
  __acroform__: {
    setBit: [Function],
    clearBit: [Function],
    getBit: [Function],
    getBitForPdf: [Function],
    setBitForPdf: [Function],
    clearBitForPdf: [Function],
    calculateCoordinates: [Function],
    arrayToPdfArray: [Function]
  },
  addField: [Function],
  AcroFormChoiceField: [Function: at],
  AcroFormListBox: [Function: ot],
  AcroFormComboBox: [Function: st],
  AcroFormEditBox: [Function: ut],
  AcroFormButton: [Function: ct],
  AcroFormPushButton: [Function: ht],
  AcroFormRadioButton: [Function: lt],
  AcroFormCheckBox: [Function: dt],
  AcroFormTextField: [Function: pt],
  AcroFormPasswordField: [Function: gt],
  AcroFormAppearance: {
    CheckBox: {
      createAppearanceStream: [Function: createAppearanceStream],
      YesPushDown: [Function: YesPushDown],
      YesNormal: [Function: YesNormal],
      OffPushDown: [Function: OffPushDown]
    },
    RadioButton: { Circle: [Object], Cross: [Object] },
    createDefaultAppearanceStream: [Function: createDefaultAppearanceStream],
    internal: {
      Bezier_C: 0.551915024494,
      calculateCross: [Function: calculateCross],
      getWidth: [Function],
      getHeight: [Function]
    }
  },
  AcroForm: {
    ChoiceField: [Function: at],
    ListBox: [Function: ot],
    ComboBox: [Function: st],
    EditBox: [Function: ut],
    Button: [Function: ct],
    PushButton: [Function: ht],
    RadioButton: [Function: lt],
    CheckBox: [Function: dt],
    TextField: [Function: pt],
    PasswordField: [Function: gt],
    Appearance: {
      CheckBox: [Object],
      RadioButton: [Object],
      createDefaultAppearanceStream: [Function: createDefaultAppearanceStream],
      internal: [Object]
    }
  },
  __addimage__: {
    getImageFileTypeByImageData: [Function],
    sHashCode: [Function],
    validateStringAsBase64: [Function],
    extractImageFromDataUrl: [Function],
    supportsArrayBuffer: [Function],
    isArrayBuffer: [Function],
    isArrayBufferView: [Function],
    binaryStringToUint8Array: [Function],
    arrayBufferToBinaryString: [Function],
    convertBase64ToBinaryString: [Function]
  },
  color_spaces: {
    DEVICE_RGB: 'DeviceRGB',
    DEVICE_GRAY: 'DeviceGray',
    DEVICE_CMYK: 'DeviceCMYK',
    CAL_GREY: 'CalGray',
    CAL_RGB: 'CalRGB',
    LAB: 'Lab',
    ICC_BASED: 'ICCBased',
    INDEXED: 'Indexed',
    PATTERN: 'Pattern',
    SEPARATION: 'Separation',
    DEVICE_N: 'DeviceN'
  },
  decode: {
    DCT_DECODE: 'DCTDecode',
    FLATE_DECODE: 'FlateDecode',
    LZW_DECODE: 'LZWDecode',
    JPX_DECODE: 'JPXDecode',
    JBIG2_DECODE: 'JBIG2Decode',
    ASCII85_DECODE: 'ASCII85Decode',
    ASCII_HEX_DECODE: 'ASCIIHexDecode',
    RUN_LENGTH_DECODE: 'RunLengthDecode',
    CCITT_FAX_DECODE: 'CCITTFaxDecode'
  },
  image_compression: { NONE: 'NONE', FAST: 'FAST', MEDIUM: 'MEDIUM', SLOW: 'SLOW' },
  addImage: [Function],
  getImageProperties: [Function],
  createAnnotation: [Function],
  link: [Function],
  textWithLink: [Function],
  getTextWidth: [Function],
  __arabicParser__: {
    isInArabicSubstitutionA: [Function],
    isArabicLetter: [Function],
    isArabicEndLetter: [Function],
    isArabicAlfLetter: [Function],
    arabicLetterHasIsolatedForm: [Function],
    arabicLetterHasFinalForm: [Function],
    arabicLetterHasInitialForm: [Function],
    arabicLetterHasMedialForm: [Function],
    resolveLigatures: [Function],
    isArabicDiacritic: [Function],
    getCorrectForm: [Function],
    processArabic: [Function]
  },
  processArabic: [Function],
  autoPrint: [Function],
  setHeaderFunction: [Function],
  getTextDimensions: [Function],
  cellAddPage: [Function],
  cell: [Function],
  table: [Function],
  setTableHeaderRow: [Function],
  printHeaderRow: [Function],
  processDataByFilters: [Function],
  loadFile: [Function],
  loadImageFile: [Function],
  html: [Function],
  addJS: [Function],
  processJPEG: [Function],
  processPNG: [Function],
  processGIF89A: [Function],
  processGIF87A: [Function],
  processBMP: [Function],
  processWEBP: [Function],
  setLanguage: [Function],
  getCharWidthsArray: [Function],
  getStringUnitWidth: [Function],
  splitTextToSize: [Function],
  __fontmetrics__: { compress: [Function], uncompress: [Function] },
  addSvgAsImage: [Function],
  putTotalPages: [Function],
  viewerPreferences: [Function],
  addMetadata: [Function],
  pdfEscape16: [Function],
  existsFileInVFS: [Function],
  addFileToVFS: [Function],
  getFileFromVFS: [Function],
  TTFFont: [Function: t] { open: [Function] },
  PDFObject: [Function: e] { convert: [Function] },
  adler32cs: {
    Adler32: [Function: l] {
      from: [Function: u],
      fromUtf8: [Function: c],
      fromBuffer: [Function: h]
    },
    from: [Function],
    fromUtf8: [Function],
    fromBuffer: [Function]
  },
  setLineDashPattern: [Function],
  setLineDash: [Function],
  getPageWidth: [Function],
  setPageWidth: [Function],
  getPageHeight: [Function],
  setPageHeight: [Function],
  outline: {
    createNamedDestinations: false,
    root: { children: [] },
    add: [Function],
    render: [Function],
    genIds_r: [Function],
    renderRoot: [Function],
    renderItems: [Function],
    line: [Function],
    makeRef: [Function],
    makeString: [Function],
    objStart: [Function],
    objEnd: [Function],
    count_r: [Function]
  },
  context2d: d {},
  canvas: e {}
}
